{
  "name": "{{=_.paramCase(it.name)}}",
  "version": "0.0.1",
  "description": "{{=_.capitalCase(it.name)}}",
  "license": "UNLICENSED",
  "private": true,
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^3.9.1",
    "@typescript-eslint/parser": "^3.9.1",
    "cross-env": "^7.0.2",
    "dotenv-cli": "^3.1.0",
    "eslint": "^7.7.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "^3.1.4",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.0.5",
    "rimraf": "^3.0.2",
    "wait-on": "^5.1.0",
    "wighawag_newsh": "^0.0.5"
  },
  "scripts": {
    "postinstall": "node ./.setup.js && node fix_ethers_modules.js",
    "preinstall": "npx only-allow pnpm",

    "// externals : Setup external services locally (ethereum node, thegraph)": "",
    "externals:down": "docker-compose down -v",
    "externals": "dotenv -e .env -e contracts/.env -- docker-compose up",
    "shell:externals": "newsh \"npm run externals\"",

    "// subgraphs : generate and deploy local subgraph": "",
    "subgraph": "wait-on web/src/contracts.json && npm --prefix subgraph run dev ../contracts/deployments/localhost_1337",
    "shell:subgraph": "newsh \"npm run subgraph\"",
    "subgraph:setup": "npm --prefix subgraph run local:setup",
    "subgraph:deploy": "wait-on web/src/contracts.json && npm --prefix subgraph run local:deploy ../contracts/deployments/localhost_1337",

    "// common lib: ensure it is compiled": "",
    "common:build": "npm --prefix common-lib run build",
    "common:dev": "npm --prefix common-lib run dev",
    "shell:common": "newsh \"npm run common:dev\"",

    "// contracts : deploy smart contracts on local ethereum node": "",
    "contracts:clean": "rimraf contracts/deployments/localhost_1337 && rimraf web/src/contracts.json",
    "contracts": "dotenv -e .env -e contracts/.env -- npm --prefix contracts run local:dev -- --export ../web/src/contracts.json",
    "shell:contracts": "newsh \"npm run contracts\"",
    "seed": "wait-on web/src/contracts.json && dotenv -e .env -e contracts/.env -- npm --prefix contracts run local:seed",
    "seed:build": "run-s common:build seed",

    "// web : run local web app in dev mode": "",
    "web": "dotenv -- npm --prefix web run dev",
    "shell:web": "newsh \"npm run web\"",

    "// start : local development setup": "This setup external service, setup subgraph and deploy it on the local graph-node, deploy the contracts and seed it",
    "setup": "npm-run-all -l externals:down --parallel externals",
    "start": "npm-run-all -l externals:down contracts:clean --parallel common:dev web externals subgraph:setup contracts subgraph seed:build",
    "dev": "npm-run-all -l contracts:clean --parallel common:dev web subgraph:setup contracts subgraph seed:build",
    "shell:setup": "npm-run-all -l externals:down --parallel shell:externals",
    "shell:start": "npm-run-all -l externals:down --parallel shell:common shell:web shell:externals --sequential common:build subgraph:setup contracts:clean shell:contracts shell:subgraph seed",
    "shell:dev": "npm-run-all -l --parallel shell:common shell:web --sequential common:build subgraph:setup contracts:clean shell:contracts shell:subgraph seed",

    "// STAGING : deploy on staging": "",
    "staging:web:build": "dotenv -e .env.staging -e .env -- npm --prefix web run staging:build --",
    "staging:web:deploy": "dotenv -e .env.staging -e .env -- npx ipfs-deploy -p pinata -s {{=_.paramCase(it.name)}} web/dist",
    "staging:seed": "dotenv -e .env.staging -e .env -- npm --prefix contracts run staging:seed",
    "staging:contracts": "dotenv -e .env.staging -e .env -- npm --prefix contracts run staging:deploy -- --export ../web/src/contracts.json",
    "staging:subgraph": "dotenv -e .env.staging -e .env -- npm --prefix subgraph run staging:deploy ../contracts/deployments/staging_4",
    "staging:web": "run-s staging:web:build staging:web:deploy",
    
    "staging": "run-s staging:contracts staging:subgraph staging:web",

    "// SERVE web ": "",
    "web:build": "dotenv -- npm --prefix web run build",
    "web:serve": "npm --prefix web run serve --",
    "web:build:serve": "run-s web:build web:serve",
    "web:generate": "npm --prefix web run generate",
    
    "// PRODUCTION : build on mainnet": "",
    "production:web:build": "dotenv -e .env.production -e .env -- npm --prefix web run build"
  }
}
